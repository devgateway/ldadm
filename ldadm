#!/usr/bin/python3
import ldap3
import argparse
import logging

log_levels = {
    "CRITICAL": logging.CRITICAL,
    "ERROR": logging.ERROR,
    "WARNING": logging.WARNING,
    "INFO": logging.INFO,
    "DEBUG": logging.DEBUG
}

ap = argparse.ArgumentParser(description = "Manage LDAP accounts")

ap.add_argument("--loglevel",
        dest = "log_level",
        default = "WARNING",
        type = str,
        choices = log_levels.keys(),
        help = "Set logging verbosity")

modes = ap.add_subparsers(title = "Objects to manage")

# User commands

user_parser = modes.add_parser("user",
        help = "User accounts")

user = user_parser.add_subparsers(title = "User command")

user.add_parser("list")

search = user.add_parser("search",
        aliases = ["find", "grep"])
search.add_argument("pattern",
        metavar = "PATTERN",
        help = "Search pattern")

multi_user_parser = argparse.ArgumentParser(add_help = False)
multi_user_parser.add_argument("username",
        metavar = "USERNAME",
        nargs = "*",
        help = "One or more UIDs. If omitted, read from stdin.")

user.add_parser("show",
        aliases = ["info"],
        parents = [multi_user_parser],
        help = "Show details for the accounts")

user.add_parser("suspend",
        aliases = ["lock", "ban", "disable"],
        parents = [multi_user_parser],
        help = "Make the accounts inactive")

user.add_parser("restore",
        aliases = ["unlock", "unban", "enable"],
        parents = [multi_user_parser],
        help = "Re-activate the accounts")

user.add_parser("delete",
        aliases = ["remove"],
        parents = [multi_user_parser],
        help = "Irreversibly destroy the account")

user_add = user.add_parser("add",
        aliases = ["create"],
        help = "Add a new account")
user_add.add_argument("username",
        metavar = "USERNAME",
        nargs = '?',
        help = "Account UID")

p_user_rename = user.add_parser("rename",
        help = "Change account UID")

# List commands

p_list = modes.add_parser("list",
        help = "Mailing lists")

ap.parse_args()
